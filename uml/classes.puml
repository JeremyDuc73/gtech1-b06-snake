@startuml





/' Objects '/

class Application {
	+Application()
	+~Application()
	-win : MainSDLWindow*
	-pg : Playground*
	-frame_rate_ms : Uint32
	+draw_fruit() : void
	+draw_snake() : void
}


class MainSDLWindow {
	+MainSDLWindow()
	+~MainSDLWindow()
	+GetRenderer() : SDL_Renderer*
	-renderer : SDL_Renderer*
	-window : SDL_Window*
	+Init(const char* name, int largeur, int hauteur) : int
	+clean() : void
}


class Playground {
	+Playground(int nbrow, int nbcol)
	+~Playground()
	-fruit : Segment*
	+GetSnake() : Snake*
	-litsnake : Snake*
	+Collide() : int
	+GetScore() : int
	+fruit_pos_x : int
	+fruit_pos_y : int
	-nbcol : int
	-nbrow : int
	-score : int
	+verif_MeetFruit() : int
	+GenerateFruit() : void
	+MeetFruit() : void
}


class Segment {
	+Segment(int pos_x, int pos_y, int dir)
	+~Segment()
	+GetNext() : Segment*
	+next : Segment*
	+GetDir() : int
	+GetPOS_X() : int
	+GetPOS_Y() : int
	-dir : int
	-pos_x : int
	-pos_y : int
	+SetDir(int dir) : void
	+SetNext(Segment* next) : void
	+SetPOS_X(int pos_x) : void
	+SetPOS_Y(int pos_y) : void
}


class Snake {
	+Snake(int pos_x, int pos_y, int dir)
	+~Snake()
	+GetHead() : Segment*
	-head : Segment*
	-tail : Segment*
	+Collide() : int
	+Eat() : void
	+Keyboard() : void
	+Move() : void
}





/' Inheritance relationships '/




/' Aggregation relationships '/

.Application o-- .MainSDLWindow


.Application o-- .Playground


.Playground o-- .Segment


.Playground o-- .Snake


.Segment o-- .Segment


.Snake "2" o-- .Segment






/' Nested objects '/



@enduml

